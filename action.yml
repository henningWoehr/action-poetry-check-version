name: "check-version"
description: "Checks, if the current project-version in the pyproject.toml is already existing as a tag. Fails, if that tag already exists"

inputs:
  token:
    description: "Github token to make authed request to GH API"
    required: true

runs:
  using: composite
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup poetry
      id: setup-poetry
      uses: henningwoehr/action-poetry-setup@v1

    # - name: Set env
    #   run: |
    #     RELEASE_OLD=$(curl -sL https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest --header "Authorization: Bearer ${{ inputs.token }}" | jq -r ".tag_name")
    #     if [[ $RELEASE_OLD -eq null ]]
    #     then
    #       RELEASE_OLD=$(echo "0.0.0")
    #     fi
    #     echo "$RELEASE_OLD" >> $GITHUB_ENV
    #     echo "POETRY_NEW=$(poetry version --short)" >> $GITHUB_ENV
    #   shell: bash

    - name: validate version
      run: |
        RELEASE_OLD=$(curl -sL https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest --header "Authorization: Bearer ${{ inputs.token }}" | jq -r ".tag_name")
        if [[ $RELEASE_OLD -eq null ]]
        then
          RELEASE_OLD=$(echo "0.0.0")
        fi
        POETRY_NEW=$(poetry version --short)
        python -c """
        import sys
        from packaging import version
        if version.parse(sys.argv[1]) >= version.parse(sys.argv[2]):
            raise ValueError('Poetry Version is not larger than the last release')
        """ $RELEASE_OLD $POETRY_NEW
      shell: bash